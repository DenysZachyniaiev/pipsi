@model WebApp.ViewModels.WeeklyScheduleViewModel
@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer Localizer

@{
    ViewData["Title"] = $"{Localizer["ScheduleFor"]} {Model.ClassName}";

    var weekStart = Model.WeekStart.Date;
    var weekEnd = weekStart.AddDays(6);
    var prevWeek = weekStart.AddDays(-7);
    var nextWeek = weekStart.AddDays(7);

    var currentWeekValue = $"{System.Globalization.ISOWeek.GetYear(weekStart)}-W{System.Globalization.ISOWeek.GetWeekOfYear(weekStart):D2}";
    var prevWeekValue = $"{System.Globalization.ISOWeek.GetYear(prevWeek)}-W{System.Globalization.ISOWeek.GetWeekOfYear(prevWeek):D2}";
    var nextWeekValue = $"{System.Globalization.ISOWeek.GetYear(nextWeek)}-W{System.Globalization.ISOWeek.GetWeekOfYear(nextWeek):D2}";
}

@if (User.IsInRole("Admin"))
{
    <a asp-action="Create" asp-route-className="@Model.ClassName" class="btn btn-success mb-3">@Localizer["AddNewEntry"]</a>
}

<div class="mb-3 d-flex align-items-center gap-2 flex-wrap">
    <form method="get" asp-action="ViewSchedule">
        <input type="hidden" name="className" value="@Model.ClassName" />
        <input type="hidden" name="weekStart" value="@prevWeekValue" />
        <button type="submit" class="btn btn-outline-secondary">@Localizer["PreviousWeek"]</button>
    </form>

    <form method="get" asp-action="ViewSchedule" class="d-flex align-items-center gap-2">
        <input type="hidden" name="className" value="@Model.ClassName" />
        <label for="weekStart" class="form-label mb-0">@Localizer["Week"]</label>
        <input type="week" name="weekStart" class="form-control" value="@currentWeekValue" onchange="this.form.submit()" />
    </form>

    <form method="get" asp-action="ViewSchedule">
        <input type="hidden" name="className" value="@Model.ClassName" />
        <input type="hidden" name="weekStart" value="@nextWeekValue" />
        <button type="submit" class="btn btn-outline-secondary">@Localizer["NextWeek"]</button>
    </form>
</div>

<p class="text-muted">@Localizer["SelectedWeek"] <strong>@weekStart.ToString("dd.MM.yyyy") – @weekEnd.ToString("dd.MM.yyyy")</strong></p>

<table class="table table-bordered text-center align-middle">
    <thead class="table-light">
        <tr>
            <th>@Localizer["Hour"]</th>
            @for (int i = 0; i < 7; i++)
            {
                var day = weekStart.AddDays(i);
                <th>@day.ToString("dddd dd.MM", System.Globalization.CultureInfo.CurrentCulture)</th>
            }
        </tr>
    </thead>
    <tbody>
        @for (int hour = 8; hour <= 16; hour++)
        {
            <tr>
                <td><strong>@hour</strong></td>
                @for (int i = 0; i < 7; i++)
                {
                    var currentDate = weekStart.AddDays(i);
                    var entry = Model.ScheduleEntries.FirstOrDefault(e => e.Date.Date == currentDate.Date && e.Hour == hour);

                    if (entry != null)
                    {
                        <td>
                            <div><strong>@entry.SubjectName</strong></div>
                            <div class="text-muted">@Localizer["Room"] @entry.ClassroomNumber</div>

                            @if (User.IsInRole("Admin"))
                            {
                                <div class="mt-1">
                                    <a asp-action="Edit" asp-route-id="@entry.Id" asp-route-className="@Model.ClassName" class="btn btn-sm btn-outline-primary">@Localizer["Edit"]</a>
                                    <a asp-action="Delete" asp-route-id="@entry.Id" asp-route-className="@Model.ClassName" class="btn btn-sm btn-outline-danger">@Localizer["Delete"]</a>
                                </div>
                            }
                        </td>
                    }
                    else
                    {
                        <td class="text-muted">–</td>
                    }
                }
            </tr>
        }
    </tbody>
</table>

<a asp-action="Index" class="btn btn-secondary">@Localizer["BackToClassSelection"]</a>
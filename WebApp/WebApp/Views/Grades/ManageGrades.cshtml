@model WebApp.ViewModels.ManageGradesViewModel
@using System.Globalization

@{
    ViewData["Title"] = "Manage Grades";

    var today = DateTime.Today;
    var safeWeekStart = (Model.WeekStart.HasValue && Model.WeekStart.Value.Year > 1900)
        ? Model.WeekStart.Value
        : ISOWeek.ToDateTime(ISOWeek.GetYear(today), ISOWeek.GetWeekOfYear(today), DayOfWeek.Monday);

    var weekEnd = safeWeekStart.AddDays(6);
    var prevWeek = safeWeekStart.AddDays(-7);
    var nextWeek = safeWeekStart.AddDays(7);

    var currentWeekValue = $"{ISOWeek.GetYear(safeWeekStart)}-W{ISOWeek.GetWeekOfYear(safeWeekStart):D2}";
    var prevWeekValue = $"{ISOWeek.GetYear(prevWeek)}-W{ISOWeek.GetWeekOfYear(prevWeek):D2}";
    var nextWeekValue = $"{ISOWeek.GetYear(nextWeek)}-W{ISOWeek.GetWeekOfYear(nextWeek):D2}";
}

@if (TempData["SuccessMessage"] is string msg)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @msg
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<h3>Grades for class @Model.ClassName</h3>

<div class="mb-3 d-flex align-items-center gap-2 flex-wrap">

    <form method="get" asp-action="ManageGrades">
        <input type="hidden" name="className" value="@Model.ClassName" />
        <input type="hidden" name="weekStart" value="@prevWeekValue" />
        <button type="submit" class="btn btn-outline-secondary">&laquo; Poprzedni tydzień</button>
    </form>

    <form method="get" asp-action="ManageGrades" class="d-flex align-items-center gap-2">
        <input type="hidden" name="className" value="@Model.ClassName" />
        <label for="weekStart" class="form-label mb-0">Tydzień:</label>
        <input type="week" name="weekStart" class="form-control d-inline-block w-auto"
               value="@currentWeekValue"
               onchange="this.form.submit()" />
    </form>

    <form method="get" asp-action="ManageGrades">
        <input type="hidden" name="className" value="@Model.ClassName" />
        <input type="hidden" name="weekStart" value="@nextWeekValue" />
        <button type="submit" class="btn btn-outline-secondary">Następny tydzień &raquo;</button>
    </form>
</div>

<p class="text-muted mb-3">
    Wybrany tydzień: <strong>@safeWeekStart.ToString("dd.MM.yyyy") – @weekEnd.ToString("dd.MM.yyyy")</strong>
</p>

@if (!Model.Assignments.Any())
{
    <div class="alert alert-info">No assignments found for this class in selected week.</div>
}
else
{
    <form method="post" asp-action="SaveGrades">
        <input type="hidden" name="ClassName" value="@Model.ClassName" />

        <div class="table-responsive" style="overflow-x: auto;">
            <table class="table table-bordered table-sm text-center align-middle" style="min-width: 1000px;">
                <thead class="table-light">
                    <tr>
                        <th>Student</th>
                        @foreach (var assignment in Model.Assignments)
                        {
                            <th>
                                <div class="d-flex flex-column align-items-center">
                                    <strong>@assignment.Name</strong>

                                    <div class="mt-1 d-flex gap-1">
                                        <a asp-controller="Assignment"
                                           asp-action="Edit"
                                           asp-route-id="@assignment.Id"
                                           class="btn btn-sm btn-outline-primary">
                                            Edit
                                        </a>

                                        <form method="post"
                                              asp-controller="Assignment"
                                              asp-action="Delete"
                                              asp-route-id="@assignment.Id"
                                              onsubmit="return confirm('Are you sure you want to delete this assignment?');">
                                            <button type="submit" class="btn btn-sm btn-outline-danger">
                                                Delete
                                            </button>
                                        </form>
                                    </div>
                                </div>
                                <div><small>@assignment.Type</small></div>
                                <div>
                                    <small>
                                        @assignment.StartDate.ToString("dd.MM.yyyy")
                                        @if (assignment.Type == "Zadanie domowe" && assignment.DueDate.HasValue)
                                        {
                                            @: – @assignment.DueDate.Value.ToString("dd.MM.yyyy")
                                        }
                                    </small>
                                </div>
                            </th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @foreach (var student in Model.Students)
                    {
                        <tr>
                            <td class="text-start">@student.FirstName @student.LastName</td>

                            @foreach (var assignment in Model.Assignments)
                            {
                                var isAssigned = Model.AssignmentStudentMap.TryGetValue(assignment.Id, out var studentSet)
                                && studentSet.Contains(student.Id);

                                if (!isAssigned)
                                {
                                    <td class="bg-light text-muted" title="Student not assigned">–</td>
                                }
                                else
                                {
                                    var grade = Model.Grades.TryGetValue(assignment.Id, out var studentGrades)
                                    && studentGrades.TryGetValue(student.Id, out var val)
                                    ? val?.ToString() : "";

                                    <td>
                                        <input type="number"
                                               min="1"
                                               max="6"
                                               name="Grades[@assignment.Id][@student.Id]"
                                               value="@grade"
                                               class="form-control text-center"
                                               style="max-width: 60px; margin: auto;" />
                                    </td>
                                }
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <button type="submit" class="btn btn-success mt-3">Zapisz oceny</button>
    </form>
}